[Speed_Creation]
nb_runs = 5
arguments = 1000,2000,3000,4000,5000
keyword = matrix,calculation
; not currently used
timeout = 60
; timeout in seconds ( does not count the time of the before_task )
before_script = filename
; the script containing the function to run before the task
before_function = functionName
; the function to run before the task
before_task_arguments = {}
; the arguments of the function to run before the task ( as a dictionary )
file_used = filename
; the file used for the task
evaluation_script = evaluationFileName
; the script containing the function to run after the task
evaluation_function = evaluationFunctionName
; the function to run after the task
evaluation_arguments = {}
; the arguments of the function to run after the task ( as a dictionary )
evaluation_sort_order = asc 
; the order of the evaluation for ranking the algorithms ( asc or desc )
extra_html_element = <p>Here you can add a html element to the page to display</p>
; if you want to add a html element to the page to display
arguments_description = Number of samples
; the description of the arguments

description = Quick description of the task
; the description of the task
extra_description = Complementary description of the task
; complementary description of the task
task_scale = auto
; the scale of the task graph
post_task_scale = linear
; the scale of the post task graph
task_xlabel = list size
task_ylabel = Time (s)
task_title = Creation time of the vector
task_display = line
post_task_xlabel = xlabel
post_task_ylabel = ylabel
post_task_title = Title
post_task_display = line

active = True
; if the task is active or not ( the benchmark will not run it if it is not active but it will be displayed if there are results)